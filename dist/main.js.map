{"version":3,"sources":["modules/caesar13.js","main.js"],"names":["caesar","result","document","querySelector","resultText","encryptionString","str","test","showResult","Error","encryptionStr","join","alphabet","forEach","el","indexEl","indexOf","toUpperCase","indexElemnetInAlphabeth","length","toLowerCase","push","text","classList","add","textContent","inputText","form","addEventListener","e","preventDefault","value"],"mappings":";AA0EeA,aAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,IAAAA,EAAAA,IAAAA,IAAAA,SAAAA,IAAAA,MAAAA,IAAAA,UAAAA,mDAAAA,SAAAA,EAAAA,GAAAA,GAAAA,OAAAA,YAAAA,OAAAA,IAAAA,uBAAAA,OAAAA,UAAAA,SAAAA,KAAAA,GAAAA,OAAAA,MAAAA,KAAAA,GAAAA,SAAAA,EAAAA,GAAAA,GAAAA,MAAAA,QAAAA,GAAAA,CAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,IAAAA,MAAAA,EAAAA,QAAAA,EAAAA,EAAAA,OAAAA,IAAAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,GAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA1Ef,IAAMC,EAASC,SAASC,cAAc,WAChCC,EAAaF,SAASC,cAAc,gBAEtCE,EAAmB,GAEvB,SAASL,EAAOM,GAGVA,GAAQ,KAARA,IAFU,kBAEWC,KAAKD,GAEtB,MADNE,IACM,IAAIC,MAAM,0BAGlBC,EAAcJ,GACdE,EAAWH,EAAiBM,KAAK,KAInC,SAASD,EAAcJ,GACfM,IAAAA,EAAW,CACf,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAGEN,EAAAA,GAAKO,QAAQ,SAACC,GACVC,IAAAA,EAAUH,EAASI,QAAQF,EAAGG,eAChCF,GAAAA,GAAW,EAAG,CACVG,IAAAA,GAA2BH,EAAU,IAAMH,EAASO,OAEvDL,IAAOA,EAAGM,cACXf,EAAiBgB,KAAKT,EAASM,GAAyBE,eAExDf,EAAiBgB,KAAKT,EAASM,SAMjCb,EAAiBgB,KAAKP,KAK5B,SAASN,IAAWc,IAAAA,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,oBACzBrB,EAAOsB,UAAUC,IAAI,UACrBpB,EAAWqB,YAAcH,EACzBjB,EAAmB,GAINL,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACnEf,aAPA,IAAA,EAAA,EAAA,QAAA,uBAOA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GALA,IAAMC,EAASC,SAASC,cAAc,WAEhCuB,EAAYxB,SAASC,cAAc,UACnCwB,EAAOzB,SAASC,cAAc,cAEpCwB,EAAKC,iBAAiB,SAAU,SAACC,GAC/BA,EAAEC,kBACKJ,EAAAA,EAAAA,SAAAA,EAAUK,OACjBL,EAAUK,MAAQ","file":"main.js","sourceRoot":"..","sourcesContent":["const result = document.querySelector(\".result\");\r\nconst resultText = document.querySelector(\".result-text\");\r\n\r\nlet encryptionString = [];\r\n\r\nfunction caesar(str) {\r\n  const regex = /^[a-zA-Z0-9 ]*$/;\r\n\r\n  if (str === \"\" || !regex.test(str)) {\r\n    showResult();\r\n    throw new Error('value must be a string')\r\n  }\r\n\r\n  encryptionStr(str);\r\n  showResult(encryptionString.join(\"\"));\r\n  \r\n}\r\n\r\nfunction encryptionStr(str) {\r\n  const alphabet = [\r\n    \"A\",\r\n    \"B\",\r\n    \"C\",\r\n    \"D\",\r\n    \"E\",\r\n    \"F\",\r\n    \"G\",\r\n    \"H\",\r\n    \"I\",\r\n    \"J\",\r\n    \"K\",\r\n    \"L\",\r\n    \"M\",\r\n    \"N\",\r\n    \"O\",\r\n    \"P\",\r\n    \"Q\",\r\n    \"R\",\r\n    \"S\",\r\n    \"T\",\r\n    \"U\",\r\n    \"V\",\r\n    \"W\",\r\n    \"X\",\r\n    \"Y\",\r\n    \"Z\",\r\n  ];\r\n\r\n  [...str].forEach((el) => {\r\n    const indexEl = alphabet.indexOf(el.toUpperCase());\r\n    if (indexEl >= 0) {\r\n      const indexElemnetInAlphabeth = (indexEl + 13) % alphabet.length;\r\n      \r\n      if(el === el.toLowerCase()){\r\n        encryptionString.push(alphabet[indexElemnetInAlphabeth].toLowerCase());\r\n      }else{\r\n        encryptionString.push(alphabet[indexElemnetInAlphabeth])\r\n      }\r\n      \r\n\r\n\r\n    } else {\r\n      encryptionString.push(el);\r\n    }\r\n  });\r\n}\r\n\r\nfunction showResult(text = \"wpidz ciąg znaków\") {\r\n  result.classList.add(\"active\");\r\n  resultText.textContent = text;\r\n  encryptionString = [];\r\n}\r\n\r\n\r\nexport default caesar;\r\n","import caesar from \"./modules/caesar13\";\r\n\r\nconst result = document.querySelector(\".result\");\r\n\r\nconst inputText = document.querySelector(\".input\");\r\nconst form = document.querySelector(\".form-wrap\");\r\n\r\nform.addEventListener(\"submit\", (e) => {\r\n  e.preventDefault();\r\n  caesar(inputText.value);\r\n  inputText.value = \"\";\r\n});\r\n"]}